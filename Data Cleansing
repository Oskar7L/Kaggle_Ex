{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8413412,"sourceType":"datasetVersion","datasetId":5007667}],"dockerImageVersionId":30698,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-05-19T07:56:54.459248Z","iopub.execute_input":"2024-05-19T07:56:54.459918Z","iopub.status.idle":"2024-05-19T07:56:55.662202Z","shell.execute_reply.started":"2024-05-19T07:56:54.459881Z","shell.execute_reply":"2024-05-19T07:56:55.661175Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"/kaggle/input/taxi-comp/train.csv\n/kaggle/input/taxi-comp/test.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"import seaborn as sns\nimport matplotlib.pyplot as plt","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:56:55.664015Z","iopub.execute_input":"2024-05-19T07:56:55.665918Z","iopub.status.idle":"2024-05-19T07:56:57.541271Z","shell.execute_reply.started":"2024-05-19T07:56:55.665872Z","shell.execute_reply":"2024-05-19T07:56:57.540076Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"test_data=pd.read_csv(\"/kaggle/input/taxi-comp/test.csv\")\ntrain_data=pd.read_csv(\"/kaggle/input/taxi-comp/train.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:56:57.548536Z","iopub.execute_input":"2024-05-19T07:56:57.549388Z","iopub.status.idle":"2024-05-19T07:57:07.794787Z","shell.execute_reply.started":"2024-05-19T07:56:57.549345Z","shell.execute_reply":"2024-05-19T07:57:07.793753Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"code","source":"train_data.head()","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:57:07.796554Z","iopub.execute_input":"2024-05-19T07:57:07.797037Z","iopub.status.idle":"2024-05-19T07:57:07.830526Z","shell.execute_reply.started":"2024-05-19T07:57:07.796987Z","shell.execute_reply":"2024-05-19T07:57:07.829392Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"          id  vendor_id      pickup_datetime     dropoff_datetime  \\\n0  id2875421          2  2016-03-14 17:24:55  2016-03-14 17:32:30   \n1  id2377394          1  2016-06-12 00:43:35  2016-06-12 00:54:38   \n2  id3858529          2  2016-01-19 11:35:24  2016-01-19 12:10:48   \n3  id3504673          2  2016-04-06 19:32:31  2016-04-06 19:39:40   \n4  id2181028          2  2016-03-26 13:30:55  2016-03-26 13:38:10   \n\n   passenger_count  pickup_longitude  pickup_latitude  dropoff_longitude  \\\n0                1        -73.982155        40.767937         -73.964630   \n1                1        -73.980415        40.738564         -73.999481   \n2                1        -73.979027        40.763939         -74.005333   \n3                1        -74.010040        40.719971         -74.012268   \n4                1        -73.973053        40.793209         -73.972923   \n\n   dropoff_latitude store_and_fwd_flag  trip_duration  \n0         40.765602                  N            455  \n1         40.731152                  N            663  \n2         40.710087                  N           2124  \n3         40.706718                  N            429  \n4         40.782520                  N            435  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>vendor_id</th>\n      <th>pickup_datetime</th>\n      <th>dropoff_datetime</th>\n      <th>passenger_count</th>\n      <th>pickup_longitude</th>\n      <th>pickup_latitude</th>\n      <th>dropoff_longitude</th>\n      <th>dropoff_latitude</th>\n      <th>store_and_fwd_flag</th>\n      <th>trip_duration</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>id2875421</td>\n      <td>2</td>\n      <td>2016-03-14 17:24:55</td>\n      <td>2016-03-14 17:32:30</td>\n      <td>1</td>\n      <td>-73.982155</td>\n      <td>40.767937</td>\n      <td>-73.964630</td>\n      <td>40.765602</td>\n      <td>N</td>\n      <td>455</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>id2377394</td>\n      <td>1</td>\n      <td>2016-06-12 00:43:35</td>\n      <td>2016-06-12 00:54:38</td>\n      <td>1</td>\n      <td>-73.980415</td>\n      <td>40.738564</td>\n      <td>-73.999481</td>\n      <td>40.731152</td>\n      <td>N</td>\n      <td>663</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>id3858529</td>\n      <td>2</td>\n      <td>2016-01-19 11:35:24</td>\n      <td>2016-01-19 12:10:48</td>\n      <td>1</td>\n      <td>-73.979027</td>\n      <td>40.763939</td>\n      <td>-74.005333</td>\n      <td>40.710087</td>\n      <td>N</td>\n      <td>2124</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>id3504673</td>\n      <td>2</td>\n      <td>2016-04-06 19:32:31</td>\n      <td>2016-04-06 19:39:40</td>\n      <td>1</td>\n      <td>-74.010040</td>\n      <td>40.719971</td>\n      <td>-74.012268</td>\n      <td>40.706718</td>\n      <td>N</td>\n      <td>429</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>id2181028</td>\n      <td>2</td>\n      <td>2016-03-26 13:30:55</td>\n      <td>2016-03-26 13:38:10</td>\n      <td>1</td>\n      <td>-73.973053</td>\n      <td>40.793209</td>\n      <td>-73.972923</td>\n      <td>40.782520</td>\n      <td>N</td>\n      <td>435</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train_data.describe()","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:57:07.832163Z","iopub.execute_input":"2024-05-19T07:57:07.832691Z","iopub.status.idle":"2024-05-19T07:57:08.266503Z","shell.execute_reply.started":"2024-05-19T07:57:07.832651Z","shell.execute_reply":"2024-05-19T07:57:08.265360Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"          vendor_id  passenger_count  pickup_longitude  pickup_latitude  \\\ncount  1.458644e+06     1.458644e+06      1.458644e+06     1.458644e+06   \nmean   1.534950e+00     1.664530e+00     -7.397349e+01     4.075092e+01   \nstd    4.987772e-01     1.314242e+00      7.090186e-02     3.288119e-02   \nmin    1.000000e+00     0.000000e+00     -1.219333e+02     3.435970e+01   \n25%    1.000000e+00     1.000000e+00     -7.399187e+01     4.073735e+01   \n50%    2.000000e+00     1.000000e+00     -7.398174e+01     4.075410e+01   \n75%    2.000000e+00     2.000000e+00     -7.396733e+01     4.076836e+01   \nmax    2.000000e+00     9.000000e+00     -6.133553e+01     5.188108e+01   \n\n       dropoff_longitude  dropoff_latitude  trip_duration  \ncount       1.458644e+06      1.458644e+06   1.458644e+06  \nmean       -7.397342e+01      4.075180e+01   9.594923e+02  \nstd         7.064327e-02      3.589056e-02   5.237432e+03  \nmin        -1.219333e+02      3.218114e+01   1.000000e+00  \n25%        -7.399133e+01      4.073588e+01   3.970000e+02  \n50%        -7.397975e+01      4.075452e+01   6.620000e+02  \n75%        -7.396301e+01      4.076981e+01   1.075000e+03  \nmax        -6.133553e+01      4.392103e+01   3.526282e+06  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>vendor_id</th>\n      <th>passenger_count</th>\n      <th>pickup_longitude</th>\n      <th>pickup_latitude</th>\n      <th>dropoff_longitude</th>\n      <th>dropoff_latitude</th>\n      <th>trip_duration</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>1.458644e+06</td>\n      <td>1.458644e+06</td>\n      <td>1.458644e+06</td>\n      <td>1.458644e+06</td>\n      <td>1.458644e+06</td>\n      <td>1.458644e+06</td>\n      <td>1.458644e+06</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>1.534950e+00</td>\n      <td>1.664530e+00</td>\n      <td>-7.397349e+01</td>\n      <td>4.075092e+01</td>\n      <td>-7.397342e+01</td>\n      <td>4.075180e+01</td>\n      <td>9.594923e+02</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>4.987772e-01</td>\n      <td>1.314242e+00</td>\n      <td>7.090186e-02</td>\n      <td>3.288119e-02</td>\n      <td>7.064327e-02</td>\n      <td>3.589056e-02</td>\n      <td>5.237432e+03</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>-1.219333e+02</td>\n      <td>3.435970e+01</td>\n      <td>-1.219333e+02</td>\n      <td>3.218114e+01</td>\n      <td>1.000000e+00</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>-7.399187e+01</td>\n      <td>4.073735e+01</td>\n      <td>-7.399133e+01</td>\n      <td>4.073588e+01</td>\n      <td>3.970000e+02</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>2.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>-7.398174e+01</td>\n      <td>4.075410e+01</td>\n      <td>-7.397975e+01</td>\n      <td>4.075452e+01</td>\n      <td>6.620000e+02</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>2.000000e+00</td>\n      <td>2.000000e+00</td>\n      <td>-7.396733e+01</td>\n      <td>4.076836e+01</td>\n      <td>-7.396301e+01</td>\n      <td>4.076981e+01</td>\n      <td>1.075000e+03</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>2.000000e+00</td>\n      <td>9.000000e+00</td>\n      <td>-6.133553e+01</td>\n      <td>5.188108e+01</td>\n      <td>-6.133553e+01</td>\n      <td>4.392103e+01</td>\n      <td>3.526282e+06</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train_data.groupby(\"store_and_fwd_flag\").count()","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:57:08.268066Z","iopub.execute_input":"2024-05-19T07:57:08.268407Z","iopub.status.idle":"2024-05-19T07:57:08.956337Z","shell.execute_reply.started":"2024-05-19T07:57:08.268378Z","shell.execute_reply":"2024-05-19T07:57:08.955450Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"                         id  vendor_id  pickup_datetime  dropoff_datetime  \\\nstore_and_fwd_flag                                                          \nN                   1450599    1450599          1450599           1450599   \nY                      8045       8045             8045              8045   \n\n                    passenger_count  pickup_longitude  pickup_latitude  \\\nstore_and_fwd_flag                                                       \nN                           1450599           1450599          1450599   \nY                              8045              8045             8045   \n\n                    dropoff_longitude  dropoff_latitude  trip_duration  \nstore_and_fwd_flag                                                      \nN                             1450599           1450599        1450599  \nY                                8045              8045           8045  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>vendor_id</th>\n      <th>pickup_datetime</th>\n      <th>dropoff_datetime</th>\n      <th>passenger_count</th>\n      <th>pickup_longitude</th>\n      <th>pickup_latitude</th>\n      <th>dropoff_longitude</th>\n      <th>dropoff_latitude</th>\n      <th>trip_duration</th>\n    </tr>\n    <tr>\n      <th>store_and_fwd_flag</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>N</th>\n      <td>1450599</td>\n      <td>1450599</td>\n      <td>1450599</td>\n      <td>1450599</td>\n      <td>1450599</td>\n      <td>1450599</td>\n      <td>1450599</td>\n      <td>1450599</td>\n      <td>1450599</td>\n      <td>1450599</td>\n    </tr>\n    <tr>\n      <th>Y</th>\n      <td>8045</td>\n      <td>8045</td>\n      <td>8045</td>\n      <td>8045</td>\n      <td>8045</td>\n      <td>8045</td>\n      <td>8045</td>\n      <td>8045</td>\n      <td>8045</td>\n      <td>8045</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"Y=train_data.store_and_fwd_flag.map({\"Y\":1,\"N\":0})\nN=train_data.store_and_fwd_flag.map({\"N\":1,\"Y\":0})","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:57:08.957694Z","iopub.execute_input":"2024-05-19T07:57:08.958418Z","iopub.status.idle":"2024-05-19T07:57:09.143535Z","shell.execute_reply.started":"2024-05-19T07:57:08.958377Z","shell.execute_reply":"2024-05-19T07:57:09.142288Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"code","source":"train_data=train_data.drop(\"store_and_fwd_flag\",axis=1)","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:57:09.145199Z","iopub.execute_input":"2024-05-19T07:57:09.145672Z","iopub.status.idle":"2024-05-19T07:57:09.231315Z","shell.execute_reply.started":"2024-05-19T07:57:09.145627Z","shell.execute_reply":"2024-05-19T07:57:09.230046Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"train_data=pd.concat([train_data,Y], axis=1)","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:57:09.235700Z","iopub.execute_input":"2024-05-19T07:57:09.236182Z","iopub.status.idle":"2024-05-19T07:57:09.376887Z","shell.execute_reply.started":"2024-05-19T07:57:09.236151Z","shell.execute_reply":"2024-05-19T07:57:09.375643Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"code","source":"train_data=pd.concat([train_data,N],axis=1)","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:57:09.378638Z","iopub.execute_input":"2024-05-19T07:57:09.379019Z","iopub.status.idle":"2024-05-19T07:57:09.551191Z","shell.execute_reply.started":"2024-05-19T07:57:09.378979Z","shell.execute_reply":"2024-05-19T07:57:09.549721Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"train_data.head()","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:57:09.552512Z","iopub.execute_input":"2024-05-19T07:57:09.552876Z","iopub.status.idle":"2024-05-19T07:57:09.574446Z","shell.execute_reply.started":"2024-05-19T07:57:09.552846Z","shell.execute_reply":"2024-05-19T07:57:09.573035Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"          id  vendor_id      pickup_datetime     dropoff_datetime  \\\n0  id2875421          2  2016-03-14 17:24:55  2016-03-14 17:32:30   \n1  id2377394          1  2016-06-12 00:43:35  2016-06-12 00:54:38   \n2  id3858529          2  2016-01-19 11:35:24  2016-01-19 12:10:48   \n3  id3504673          2  2016-04-06 19:32:31  2016-04-06 19:39:40   \n4  id2181028          2  2016-03-26 13:30:55  2016-03-26 13:38:10   \n\n   passenger_count  pickup_longitude  pickup_latitude  dropoff_longitude  \\\n0                1        -73.982155        40.767937         -73.964630   \n1                1        -73.980415        40.738564         -73.999481   \n2                1        -73.979027        40.763939         -74.005333   \n3                1        -74.010040        40.719971         -74.012268   \n4                1        -73.973053        40.793209         -73.972923   \n\n   dropoff_latitude  trip_duration  store_and_fwd_flag  store_and_fwd_flag  \n0         40.765602            455                   0                   1  \n1         40.731152            663                   0                   1  \n2         40.710087           2124                   0                   1  \n3         40.706718            429                   0                   1  \n4         40.782520            435                   0                   1  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>vendor_id</th>\n      <th>pickup_datetime</th>\n      <th>dropoff_datetime</th>\n      <th>passenger_count</th>\n      <th>pickup_longitude</th>\n      <th>pickup_latitude</th>\n      <th>dropoff_longitude</th>\n      <th>dropoff_latitude</th>\n      <th>trip_duration</th>\n      <th>store_and_fwd_flag</th>\n      <th>store_and_fwd_flag</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>id2875421</td>\n      <td>2</td>\n      <td>2016-03-14 17:24:55</td>\n      <td>2016-03-14 17:32:30</td>\n      <td>1</td>\n      <td>-73.982155</td>\n      <td>40.767937</td>\n      <td>-73.964630</td>\n      <td>40.765602</td>\n      <td>455</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>id2377394</td>\n      <td>1</td>\n      <td>2016-06-12 00:43:35</td>\n      <td>2016-06-12 00:54:38</td>\n      <td>1</td>\n      <td>-73.980415</td>\n      <td>40.738564</td>\n      <td>-73.999481</td>\n      <td>40.731152</td>\n      <td>663</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>id3858529</td>\n      <td>2</td>\n      <td>2016-01-19 11:35:24</td>\n      <td>2016-01-19 12:10:48</td>\n      <td>1</td>\n      <td>-73.979027</td>\n      <td>40.763939</td>\n      <td>-74.005333</td>\n      <td>40.710087</td>\n      <td>2124</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>id3504673</td>\n      <td>2</td>\n      <td>2016-04-06 19:32:31</td>\n      <td>2016-04-06 19:39:40</td>\n      <td>1</td>\n      <td>-74.010040</td>\n      <td>40.719971</td>\n      <td>-74.012268</td>\n      <td>40.706718</td>\n      <td>429</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>id2181028</td>\n      <td>2</td>\n      <td>2016-03-26 13:30:55</td>\n      <td>2016-03-26 13:38:10</td>\n      <td>1</td>\n      <td>-73.973053</td>\n      <td>40.793209</td>\n      <td>-73.972923</td>\n      <td>40.782520</td>\n      <td>435</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train_data.columns=list(train_data.columns[:-1])+[\"N\"]","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:57:09.575789Z","iopub.execute_input":"2024-05-19T07:57:09.576214Z","iopub.status.idle":"2024-05-19T07:57:09.583813Z","shell.execute_reply.started":"2024-05-19T07:57:09.576183Z","shell.execute_reply":"2024-05-19T07:57:09.582363Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"code","source":"train_data.columns=list(train_data.columns[:-2])+[\"Y\",\"N\"]","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:57:09.585288Z","iopub.execute_input":"2024-05-19T07:57:09.585827Z","iopub.status.idle":"2024-05-19T07:57:09.595600Z","shell.execute_reply.started":"2024-05-19T07:57:09.585785Z","shell.execute_reply":"2024-05-19T07:57:09.594384Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"code","source":"train_data.head()","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:57:09.596903Z","iopub.execute_input":"2024-05-19T07:57:09.597346Z","iopub.status.idle":"2024-05-19T07:57:09.619801Z","shell.execute_reply.started":"2024-05-19T07:57:09.597308Z","shell.execute_reply":"2024-05-19T07:57:09.618443Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"          id  vendor_id      pickup_datetime     dropoff_datetime  \\\n0  id2875421          2  2016-03-14 17:24:55  2016-03-14 17:32:30   \n1  id2377394          1  2016-06-12 00:43:35  2016-06-12 00:54:38   \n2  id3858529          2  2016-01-19 11:35:24  2016-01-19 12:10:48   \n3  id3504673          2  2016-04-06 19:32:31  2016-04-06 19:39:40   \n4  id2181028          2  2016-03-26 13:30:55  2016-03-26 13:38:10   \n\n   passenger_count  pickup_longitude  pickup_latitude  dropoff_longitude  \\\n0                1        -73.982155        40.767937         -73.964630   \n1                1        -73.980415        40.738564         -73.999481   \n2                1        -73.979027        40.763939         -74.005333   \n3                1        -74.010040        40.719971         -74.012268   \n4                1        -73.973053        40.793209         -73.972923   \n\n   dropoff_latitude  trip_duration  Y  N  \n0         40.765602            455  0  1  \n1         40.731152            663  0  1  \n2         40.710087           2124  0  1  \n3         40.706718            429  0  1  \n4         40.782520            435  0  1  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>vendor_id</th>\n      <th>pickup_datetime</th>\n      <th>dropoff_datetime</th>\n      <th>passenger_count</th>\n      <th>pickup_longitude</th>\n      <th>pickup_latitude</th>\n      <th>dropoff_longitude</th>\n      <th>dropoff_latitude</th>\n      <th>trip_duration</th>\n      <th>Y</th>\n      <th>N</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>id2875421</td>\n      <td>2</td>\n      <td>2016-03-14 17:24:55</td>\n      <td>2016-03-14 17:32:30</td>\n      <td>1</td>\n      <td>-73.982155</td>\n      <td>40.767937</td>\n      <td>-73.964630</td>\n      <td>40.765602</td>\n      <td>455</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>id2377394</td>\n      <td>1</td>\n      <td>2016-06-12 00:43:35</td>\n      <td>2016-06-12 00:54:38</td>\n      <td>1</td>\n      <td>-73.980415</td>\n      <td>40.738564</td>\n      <td>-73.999481</td>\n      <td>40.731152</td>\n      <td>663</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>id3858529</td>\n      <td>2</td>\n      <td>2016-01-19 11:35:24</td>\n      <td>2016-01-19 12:10:48</td>\n      <td>1</td>\n      <td>-73.979027</td>\n      <td>40.763939</td>\n      <td>-74.005333</td>\n      <td>40.710087</td>\n      <td>2124</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>id3504673</td>\n      <td>2</td>\n      <td>2016-04-06 19:32:31</td>\n      <td>2016-04-06 19:39:40</td>\n      <td>1</td>\n      <td>-74.010040</td>\n      <td>40.719971</td>\n      <td>-74.012268</td>\n      <td>40.706718</td>\n      <td>429</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>id2181028</td>\n      <td>2</td>\n      <td>2016-03-26 13:30:55</td>\n      <td>2016-03-26 13:38:10</td>\n      <td>1</td>\n      <td>-73.973053</td>\n      <td>40.793209</td>\n      <td>-73.972923</td>\n      <td>40.782520</td>\n      <td>435</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"train_data=train_data.drop(\"id\",axis=1)","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:57:09.621417Z","iopub.execute_input":"2024-05-19T07:57:09.621871Z","iopub.status.idle":"2024-05-19T07:57:09.704766Z","shell.execute_reply.started":"2024-05-19T07:57:09.621839Z","shell.execute_reply":"2024-05-19T07:57:09.703586Z"},"trusted":true},"execution_count":15,"outputs":[]},{"cell_type":"code","source":"from datetime import datetime\ndate_format = '%Y-%m-%d %H:%M:%S'\ntrain_data.pickup_datetime=train_data.pickup_datetime.apply(lambda x: datetime.strptime(x,date_format))","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:57:09.706441Z","iopub.execute_input":"2024-05-19T07:57:09.706785Z","iopub.status.idle":"2024-05-19T07:57:37.061744Z","shell.execute_reply.started":"2024-05-19T07:57:09.706758Z","shell.execute_reply":"2024-05-19T07:57:37.060591Z"},"trusted":true},"execution_count":16,"outputs":[]},{"cell_type":"code","source":"train_data.dropoff_datetime=train_data.dropoff_datetime.apply(lambda x: datetime.strptime(x,date_format))","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:57:37.063231Z","iopub.execute_input":"2024-05-19T07:57:37.063820Z","iopub.status.idle":"2024-05-19T07:58:04.841880Z","shell.execute_reply.started":"2024-05-19T07:57:37.063787Z","shell.execute_reply":"2024-05-19T07:58:04.840254Z"},"trusted":true},"execution_count":17,"outputs":[]},{"cell_type":"code","source":"pickup_hour=train_data.pickup_datetime.dt.hour\npickup_hour.head()","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:58:04.843629Z","iopub.execute_input":"2024-05-19T07:58:04.843997Z","iopub.status.idle":"2024-05-19T07:58:04.914939Z","shell.execute_reply.started":"2024-05-19T07:58:04.843968Z","shell.execute_reply":"2024-05-19T07:58:04.913783Z"},"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"0    17\n1     0\n2    11\n3    19\n4    13\nName: pickup_datetime, dtype: int32"},"metadata":{}}]},{"cell_type":"code","source":"pickup_month=train_data.pickup_datetime.dt.month","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:58:04.916647Z","iopub.execute_input":"2024-05-19T07:58:04.917008Z","iopub.status.idle":"2024-05-19T07:58:04.982754Z","shell.execute_reply.started":"2024-05-19T07:58:04.916970Z","shell.execute_reply":"2024-05-19T07:58:04.981344Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"code","source":"pickup_year=train_data.pickup_datetime.dt.year","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:58:04.984273Z","iopub.execute_input":"2024-05-19T07:58:04.985205Z","iopub.status.idle":"2024-05-19T07:58:05.049068Z","shell.execute_reply.started":"2024-05-19T07:58:04.985169Z","shell.execute_reply":"2024-05-19T07:58:05.047797Z"},"trusted":true},"execution_count":20,"outputs":[]},{"cell_type":"code","source":"dropoff_hour=train_data.dropoff_datetime.dt.hour\ndropoff_month=train_data.dropoff_datetime.dt.month\ndropoff_year=train_data.dropoff_datetime.dt.year","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:58:05.051107Z","iopub.execute_input":"2024-05-19T07:58:05.051469Z","iopub.status.idle":"2024-05-19T07:58:05.239172Z","shell.execute_reply.started":"2024-05-19T07:58:05.051438Z","shell.execute_reply":"2024-05-19T07:58:05.237637Z"},"trusted":true},"execution_count":21,"outputs":[]},{"cell_type":"code","source":"train_data=train_data.drop(['pickup_datetime','dropoff_datetime'],axis=1)","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:58:05.240750Z","iopub.execute_input":"2024-05-19T07:58:05.241280Z","iopub.status.idle":"2024-05-19T07:58:05.294187Z","shell.execute_reply.started":"2024-05-19T07:58:05.241243Z","shell.execute_reply":"2024-05-19T07:58:05.292521Z"},"trusted":true},"execution_count":22,"outputs":[]},{"cell_type":"code","source":"ph=pd.Series(pickup_hour,name='pickup_hour')\npm=pd.Series(pickup_month,name='pickup_month')\npyr=pd.Series(pickup_year,name='pickup_year')\ndh=pd.Series(dropoff_hour,name='dropoff_hour')\ndm=pd.Series(dropoff_month,name='dropoff_month')\ndyr=pd.Series(dropoff_year,name='dropoff_year')\ntrain_data=pd.concat([train_data,ph,pm,pyr,dh,dm,dyr], axis=1)","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:58:05.296167Z","iopub.execute_input":"2024-05-19T07:58:05.296591Z","iopub.status.idle":"2024-05-19T07:58:05.416018Z","shell.execute_reply.started":"2024-05-19T07:58:05.296558Z","shell.execute_reply":"2024-05-19T07:58:05.414444Z"},"trusted":true},"execution_count":23,"outputs":[]},{"cell_type":"code","source":"train_data.head()","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:58:05.418053Z","iopub.execute_input":"2024-05-19T07:58:05.418478Z","iopub.status.idle":"2024-05-19T07:58:05.438549Z","shell.execute_reply.started":"2024-05-19T07:58:05.418444Z","shell.execute_reply":"2024-05-19T07:58:05.437167Z"},"trusted":true},"execution_count":24,"outputs":[{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"   vendor_id  passenger_count  pickup_longitude  pickup_latitude  \\\n0          2                1        -73.982155        40.767937   \n1          1                1        -73.980415        40.738564   \n2          2                1        -73.979027        40.763939   \n3          2                1        -74.010040        40.719971   \n4          2                1        -73.973053        40.793209   \n\n   dropoff_longitude  dropoff_latitude  trip_duration  Y  N  pickup_hour  \\\n0         -73.964630         40.765602            455  0  1           17   \n1         -73.999481         40.731152            663  0  1            0   \n2         -74.005333         40.710087           2124  0  1           11   \n3         -74.012268         40.706718            429  0  1           19   \n4         -73.972923         40.782520            435  0  1           13   \n\n   pickup_month  pickup_year  dropoff_hour  dropoff_month  dropoff_year  \n0             3         2016            17              3          2016  \n1             6         2016             0              6          2016  \n2             1         2016            12              1          2016  \n3             4         2016            19              4          2016  \n4             3         2016            13              3          2016  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>vendor_id</th>\n      <th>passenger_count</th>\n      <th>pickup_longitude</th>\n      <th>pickup_latitude</th>\n      <th>dropoff_longitude</th>\n      <th>dropoff_latitude</th>\n      <th>trip_duration</th>\n      <th>Y</th>\n      <th>N</th>\n      <th>pickup_hour</th>\n      <th>pickup_month</th>\n      <th>pickup_year</th>\n      <th>dropoff_hour</th>\n      <th>dropoff_month</th>\n      <th>dropoff_year</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2</td>\n      <td>1</td>\n      <td>-73.982155</td>\n      <td>40.767937</td>\n      <td>-73.964630</td>\n      <td>40.765602</td>\n      <td>455</td>\n      <td>0</td>\n      <td>1</td>\n      <td>17</td>\n      <td>3</td>\n      <td>2016</td>\n      <td>17</td>\n      <td>3</td>\n      <td>2016</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>-73.980415</td>\n      <td>40.738564</td>\n      <td>-73.999481</td>\n      <td>40.731152</td>\n      <td>663</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2016</td>\n      <td>0</td>\n      <td>6</td>\n      <td>2016</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>1</td>\n      <td>-73.979027</td>\n      <td>40.763939</td>\n      <td>-74.005333</td>\n      <td>40.710087</td>\n      <td>2124</td>\n      <td>0</td>\n      <td>1</td>\n      <td>11</td>\n      <td>1</td>\n      <td>2016</td>\n      <td>12</td>\n      <td>1</td>\n      <td>2016</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2</td>\n      <td>1</td>\n      <td>-74.010040</td>\n      <td>40.719971</td>\n      <td>-74.012268</td>\n      <td>40.706718</td>\n      <td>429</td>\n      <td>0</td>\n      <td>1</td>\n      <td>19</td>\n      <td>4</td>\n      <td>2016</td>\n      <td>19</td>\n      <td>4</td>\n      <td>2016</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2</td>\n      <td>1</td>\n      <td>-73.973053</td>\n      <td>40.793209</td>\n      <td>-73.972923</td>\n      <td>40.782520</td>\n      <td>435</td>\n      <td>0</td>\n      <td>1</td>\n      <td>13</td>\n      <td>3</td>\n      <td>2016</td>\n      <td>13</td>\n      <td>3</td>\n      <td>2016</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nimport seaborn as sns \nmatrix = train_data.corr()\nmask = np.triu(np.ones_like(matrix, dtype=bool))\nf, ax = plt.subplots(figsize=(11, 9))\ncmap = sns.diverging_palette(230, 20, as_cmap=True)\nsns.heatmap(matrix, mask=mask, cmap=cmap, vmax=.3, center=0,\n            square=True, linewidths=.5, cbar_kws={\"shrink\": .5})","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:58:05.440295Z","iopub.execute_input":"2024-05-19T07:58:05.440730Z","iopub.status.idle":"2024-05-19T07:58:07.267038Z","shell.execute_reply.started":"2024-05-19T07:58:05.440683Z","shell.execute_reply":"2024-05-19T07:58:07.265718Z"},"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"<Axes: >"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 1100x900 with 2 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"train_data.describe()","metadata":{"execution":{"iopub.status.busy":"2024-05-19T07:58:07.268366Z","iopub.execute_input":"2024-05-19T07:58:07.269687Z","iopub.status.idle":"2024-05-19T07:58:08.041314Z","shell.execute_reply.started":"2024-05-19T07:58:07.269647Z","shell.execute_reply":"2024-05-19T07:58:08.040228Z"},"trusted":true},"execution_count":26,"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"          vendor_id  passenger_count  pickup_longitude  pickup_latitude  \\\ncount  1.458644e+06     1.458644e+06      1.458644e+06     1.458644e+06   \nmean   1.534950e+00     1.664530e+00     -7.397349e+01     4.075092e+01   \nstd    4.987772e-01     1.314242e+00      7.090186e-02     3.288119e-02   \nmin    1.000000e+00     0.000000e+00     -1.219333e+02     3.435970e+01   \n25%    1.000000e+00     1.000000e+00     -7.399187e+01     4.073735e+01   \n50%    2.000000e+00     1.000000e+00     -7.398174e+01     4.075410e+01   \n75%    2.000000e+00     2.000000e+00     -7.396733e+01     4.076836e+01   \nmax    2.000000e+00     9.000000e+00     -6.133553e+01     5.188108e+01   \n\n       dropoff_longitude  dropoff_latitude  trip_duration             Y  \\\ncount       1.458644e+06      1.458644e+06   1.458644e+06  1.458644e+06   \nmean       -7.397342e+01      4.075180e+01   9.594923e+02  5.515396e-03   \nstd         7.064327e-02      3.589056e-02   5.237432e+03  7.406066e-02   \nmin        -1.219333e+02      3.218114e+01   1.000000e+00  0.000000e+00   \n25%        -7.399133e+01      4.073588e+01   3.970000e+02  0.000000e+00   \n50%        -7.397975e+01      4.075452e+01   6.620000e+02  0.000000e+00   \n75%        -7.396301e+01      4.076981e+01   1.075000e+03  0.000000e+00   \nmax        -6.133553e+01      4.392103e+01   3.526282e+06  1.000000e+00   \n\n                  N   pickup_hour  pickup_month  pickup_year  dropoff_hour  \\\ncount  1.458644e+06  1.458644e+06  1.458644e+06    1458644.0  1.458644e+06   \nmean   9.944846e-01  1.360648e+01  3.516818e+00       2016.0  1.359890e+01   \nstd    7.406066e-02  6.399693e+00  1.681038e+00          0.0  6.483682e+00   \nmin    0.000000e+00  0.000000e+00  1.000000e+00       2016.0  0.000000e+00   \n25%    1.000000e+00  9.000000e+00  2.000000e+00       2016.0  9.000000e+00   \n50%    1.000000e+00  1.400000e+01  4.000000e+00       2016.0  1.400000e+01   \n75%    1.000000e+00  1.900000e+01  5.000000e+00       2016.0  1.900000e+01   \nmax    1.000000e+00  2.300000e+01  6.000000e+00       2016.0  2.300000e+01   \n\n       dropoff_month  dropoff_year  \ncount   1.458644e+06     1458644.0  \nmean    3.517178e+00        2016.0  \nstd     1.681217e+00           0.0  \nmin     1.000000e+00        2016.0  \n25%     2.000000e+00        2016.0  \n50%     4.000000e+00        2016.0  \n75%     5.000000e+00        2016.0  \nmax     7.000000e+00        2016.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>vendor_id</th>\n      <th>passenger_count</th>\n      <th>pickup_longitude</th>\n      <th>pickup_latitude</th>\n      <th>dropoff_longitude</th>\n      <th>dropoff_latitude</th>\n      <th>trip_duration</th>\n      <th>Y</th>\n      <th>N</th>\n      <th>pickup_hour</th>\n      <th>pickup_month</th>\n      <th>pickup_year</th>\n      <th>dropoff_hour</th>\n      <th>dropoff_month</th>\n      <th>dropoff_year</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>1.458644e+06</td>\n      <td>1.458644e+06</td>\n      <td>1.458644e+06</td>\n      <td>1.458644e+06</td>\n      <td>1.458644e+06</td>\n      <td>1.458644e+06</td>\n      <td>1.458644e+06</td>\n      <td>1.458644e+06</td>\n      <td>1.458644e+06</td>\n      <td>1.458644e+06</td>\n      <td>1.458644e+06</td>\n      <td>1458644.0</td>\n      <td>1.458644e+06</td>\n      <td>1.458644e+06</td>\n      <td>1458644.0</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>1.534950e+00</td>\n      <td>1.664530e+00</td>\n      <td>-7.397349e+01</td>\n      <td>4.075092e+01</td>\n      <td>-7.397342e+01</td>\n      <td>4.075180e+01</td>\n      <td>9.594923e+02</td>\n      <td>5.515396e-03</td>\n      <td>9.944846e-01</td>\n      <td>1.360648e+01</td>\n      <td>3.516818e+00</td>\n      <td>2016.0</td>\n      <td>1.359890e+01</td>\n      <td>3.517178e+00</td>\n      <td>2016.0</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>4.987772e-01</td>\n      <td>1.314242e+00</td>\n      <td>7.090186e-02</td>\n      <td>3.288119e-02</td>\n      <td>7.064327e-02</td>\n      <td>3.589056e-02</td>\n      <td>5.237432e+03</td>\n      <td>7.406066e-02</td>\n      <td>7.406066e-02</td>\n      <td>6.399693e+00</td>\n      <td>1.681038e+00</td>\n      <td>0.0</td>\n      <td>6.483682e+00</td>\n      <td>1.681217e+00</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>-1.219333e+02</td>\n      <td>3.435970e+01</td>\n      <td>-1.219333e+02</td>\n      <td>3.218114e+01</td>\n      <td>1.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>0.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>2016.0</td>\n      <td>0.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>2016.0</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>-7.399187e+01</td>\n      <td>4.073735e+01</td>\n      <td>-7.399133e+01</td>\n      <td>4.073588e+01</td>\n      <td>3.970000e+02</td>\n      <td>0.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>9.000000e+00</td>\n      <td>2.000000e+00</td>\n      <td>2016.0</td>\n      <td>9.000000e+00</td>\n      <td>2.000000e+00</td>\n      <td>2016.0</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>2.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>-7.398174e+01</td>\n      <td>4.075410e+01</td>\n      <td>-7.397975e+01</td>\n      <td>4.075452e+01</td>\n      <td>6.620000e+02</td>\n      <td>0.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>1.400000e+01</td>\n      <td>4.000000e+00</td>\n      <td>2016.0</td>\n      <td>1.400000e+01</td>\n      <td>4.000000e+00</td>\n      <td>2016.0</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>2.000000e+00</td>\n      <td>2.000000e+00</td>\n      <td>-7.396733e+01</td>\n      <td>4.076836e+01</td>\n      <td>-7.396301e+01</td>\n      <td>4.076981e+01</td>\n      <td>1.075000e+03</td>\n      <td>0.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>1.900000e+01</td>\n      <td>5.000000e+00</td>\n      <td>2016.0</td>\n      <td>1.900000e+01</td>\n      <td>5.000000e+00</td>\n      <td>2016.0</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>2.000000e+00</td>\n      <td>9.000000e+00</td>\n      <td>-6.133553e+01</td>\n      <td>5.188108e+01</td>\n      <td>-6.133553e+01</td>\n      <td>4.392103e+01</td>\n      <td>3.526282e+06</td>\n      <td>1.000000e+00</td>\n      <td>1.000000e+00</td>\n      <td>2.300000e+01</td>\n      <td>6.000000e+00</td>\n      <td>2016.0</td>\n      <td>2.300000e+01</td>\n      <td>7.000000e+00</td>\n      <td>2016.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}